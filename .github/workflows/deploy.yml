name: Deploy to EC2
on: #develop branch에 push 될 경우에만 수행
  push:
    branches:
      - feature/SO-30-github-action

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout #branch로 checkout
        uses: actions/checkout@main

      - name: create env file
        run: |
          touch .env
          echo "${{ secrets.ENV_VARS }}" >> .env

      #ec2 서버에 접속 해 리모트 디렉토리 생성
      - name: create remote directory
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: mkdir -p /home/ubuntu/srv/weddingmate

      #      - name: create env file
      #        uses: appleboy/ssh-action@v0.1.5
      #        with:
      #          host: ${{ secrets.HOST }}
      #          username: ubuntu
      #          key: ${{ secrets.KEY }}
      #          script: |
      #              echo '${{ secrets.ENV_VARS }}' >> /home/ubuntu/srv/weddingmate/.env

      #ssh key로 현재 푸시된 소스를 서버에 복사
      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: /home/ubuntu/srv/weddingmate
          remote_host: ${{ secrets.HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sh /home/ubuntu/srv/weddingmate/config/scripts/deploy.sh

#      - name: delete unused images and containers
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ubuntu
#          key: ${{ secrets.KEY }}
#          script: |
#            sh /home/ubuntu/srv/ubuntu/config/scripts/delete.sh
