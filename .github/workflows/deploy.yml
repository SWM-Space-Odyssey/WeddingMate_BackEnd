name: Deploy

on:
  # 특정 브랜치로 푸시될 때에만 워크플로우를 실행합니다.
  push:
    branches:
      - features/SO-288-fix-codedeploy-script
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: setup jdk 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'

      - name: add permission to gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Create .env file
        run: |
          touch .env
          echo "${{ secrets.ENV_VARS }}" >> .env

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: weddingmate
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          mkdir config/codedeploy
          
          touch config/codedeploy/deploy.sh
          echo "aws ecr get-login-password --region ap-northeast-2 | sudo docker login --username AWS --password-stdin $ECR_REGISTRY" >> config/codedeploy/deploy.sh
          echo "sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> config/codedeploy/deploy.sh
          echo "sh /home/ubuntu/srv/weddingmate/config/codedeploy/deploy.sh $IMAGE_TAG" >> config/codedeploy/deploy.sh

      - name: Upload to S3
        env:
          ZIP_TAG: ${{ github.sha }}
        run: |
          zip -r deploy-$ZIP_TAG.zip ./config/codedeploy appspec.yml
          aws s3 cp --region ap-northeast-2 --acl private ./deploy-$ZIP_TAG.zip s3://weddingmate-codedeploy-bucket
       
      - name: Start deploy
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws deploy create-deployment --application-name deploy \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name deploy-group \
          --s3-location bucket=weddingmate-codedeploy-bucket,bundleType=zip,key=deploy-$IMAGE_TAG.zip
      
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
            status: ${{ job.status }}
            author_name: Github Action Test
            fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
